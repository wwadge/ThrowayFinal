package com.go.demo.model.factories;

import com.go.demo.model.*;
import com.go.demo.model.repository.*;
import com.go.demo.util.BasicDataGenerator;
import org.springframework.stereotype.Component;
import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.Multimap;
import java.util.Collection;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;


/** 
 * DAO factory implementation.
 * @author autogenerated
 */
@Component
public class GodbDataPoolFactory implements ApplicationContextAware {
	/** Table commit order. */
    private static final Multimap<String, String> tableDeps = ArrayListMultimap.create();
	/** DB commit order. */
	private static final String[] commitOrder = new String[]{"AccountHolder"};
	static{
		// Store table deps for possible use. 
	}
	
	/** For cyclic classes. */
	static ApplicationContext context;
	 
	public void setApplicationContext(ApplicationContext ctx){
	    context = ctx;
	}




    /**
     * Data pool factory for AccountHolder.
     * @return AccountHolderA AccountHolder object
     */
    public static AccountHolder getAccountHolder() {

        AccountHolder accountHolder = new AccountHolder();    
        
        accountHolder.setEmailAddress(BasicDataGenerator.generateRandomString(2147483647));
        accountHolder.setId(BasicDataGenerator.generateRandomLong());

        return accountHolder;
    }
    /** Returns the commit order of this database. 
	 * Useful for iterating through the classes for deletion in the right order. 
	 * @return String[] list of classes
	 */
	public static String[] getDBCommitOrder() {
		return commitOrder;
	}
	
	/**
	 * @param className classname to return
	 * @return the tabledeps for the given class name
	 */
	public static Collection<String> getTabledeps(String className) {
		return tableDeps.get(className);
	}
	
}
